name: Backend CI/CD Pipeline

on:
  push:
    branches: [ main, dev, feature/1.0-setup ]
    paths:
      - 'backend/**'
  pull_request:
    branches: [ main, dev ]
    paths:
      - 'backend/**'

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend

    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run tests
      run: npm test
      env:
        CI: true
    
    - name: Upload coverage reports
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        directory: ./backend/coverage
        fail_ci_if_error: false

  deploy-dev:
    needs: test
    if: github.ref == 'refs/heads/dev'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Firebase
      uses: w9jds/firebase-action@master
      with:
        args: setup:emulators:firestore
      env:
        GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
    
    - name: Deploy to Dev Environment
      uses: w9jds/firebase-action@master
      with:
        args: deploy --only functions -P dev
      env:
        GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        NODE_ENV: development
  
  deploy-prod:
    needs: test
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Use Node.js 18.x
      uses: actions/setup-node@v3
      with:
        node-version: 18.x
        cache: 'npm'
        cache-dependency-path: './backend/package-lock.json'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Setup Firebase
      uses: w9jds/firebase-action@master
      with:
        args: setup:emulators:firestore
      env:
        GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
    
    - name: Deploy to Production Environment
      uses: w9jds/firebase-action@master
      with:
        args: deploy --only functions -P prod
      env:
        GCP_SA_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT }}
        NODE_ENV: production
