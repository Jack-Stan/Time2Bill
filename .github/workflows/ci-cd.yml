name: Time2Bill CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend-tests:
    name: Backend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ./backend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Run tests
        run: npm test
        env:
          NODE_OPTIONS: --experimental-vm-modules
      
      - name: Upload test coverage
        uses: actions/upload-artifact@v3
        with:
          name: backend-coverage
          path: ./backend/coverage
  
  frontend-tests:
    name: Frontend Tests
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Analyze project source
        run: flutter analyze
      
      - name: Run tests
        run: flutter test
  
  build-backend:
    name: Build Backend
    needs: backend-tests
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./backend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: ./backend/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Create deployment package
        run: |
          mkdir -p deployment
          cp -r src package.json package-lock.json deployment/
          cd deployment
          zip -r ../backend-deployment.zip .
      
      - name: Upload deployment artifact
        uses: actions/upload-artifact@v3
        with:
          name: backend-deployment
          path: ./backend/backend-deployment.zip
  
  build-frontend:
    name: Build Frontend
    needs: frontend-tests
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.16.0'
          channel: 'stable'
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Build web
        run: flutter build web --release
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v3
        with:
          name: frontend-web-build
          path: ./frontend/build/web

  deploy-production:
    name: Deploy to Production
    needs: [build-backend, build-frontend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download frontend artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-web-build
          path: frontend-web-build
      
      - name: Deploy Frontend to Netlify
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: './frontend-web-build'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
      
      - name: Download backend artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-deployment
          path: backend-deployment
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Extract backend deployment
        run: unzip backend-deployment/backend-deployment.zip -d backend-deployment-extracted
      
      - name: Deploy Backend to Netlify Functions
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: './backend-deployment-extracted'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy Backend from GitHub Actions"
          functions-dir: './backend-deployment-extracted/src'
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1

  deploy-staging:
    name: Deploy to Staging Environment
    needs: [build-backend, build-frontend]
    if: github.event_name == 'push' && github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Download frontend artifact
        uses: actions/download-artifact@v3
        with:
          name: frontend-web-build
          path: frontend-web-build
      
      - name: Deploy Frontend to Netlify (Preview)
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: './frontend-web-build'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy Preview from GitHub Actions"
          enable-pull-request-comment: true
          enable-commit-comment: true
          overwrites-pull-request-comment: true
          alias: staging
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
      
      - name: Download backend artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-deployment
          path: backend-deployment
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      - name: Extract backend deployment
        run: unzip backend-deployment/backend-deployment.zip -d backend-deployment-extracted
      
      - name: Deploy Backend to Netlify Functions (Preview)
        uses: nwtgck/actions-netlify@v2
        with:
          publish-dir: './backend-deployment-extracted'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message: "Deploy Backend Preview from GitHub Actions"
          functions-dir: './backend-deployment-extracted/src'
          alias: staging-backend
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
